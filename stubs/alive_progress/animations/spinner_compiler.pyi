from ..utils.cells import fix_cells as fix_cells, is_wide as is_wide, join_cells as join_cells, strip_marks as strip_marks, to_cells as to_cells
from ..utils.colors import BLUE as BLUE, BLUE_BOLD as BLUE_BOLD, CYAN as CYAN, DIM as DIM, GREEN as GREEN, ORANGE as ORANGE, ORANGE_BOLD as ORANGE_BOLD, RED as RED, YELLOW_BOLD as YELLOW_BOLD
from ..utils.terminal import FULL as FULL
from .utils import fix_signature as fix_signature
from _typeshed import Incomplete

def spinner_controller(*, natural, skip_compiler: bool = ...): ...
def extra_command(is_compiler): ...

EXTRA_COMMANDS: Incomplete
compiler_command: Incomplete
runner_command: Incomplete

def replace(spec, old, new) -> None: ...
def pause(spec, edges: Incomplete | None = ..., center: Incomplete | None = ..., other: Incomplete | None = ...): ...
def reshape(spec, num_frames): ...
def bounce(spec) -> None: ...
def transpose(spec) -> None: ...
def sequential(spec) -> None: ...
def randomize(spec, cycles: Incomplete | None = ...) -> None: ...
def apply_extra_commands(spec, extra_commands) -> None: ...
def spinner_compiler(gen, natural, extra_commands): ...
def spinner_runner_factory(spec, t_compile, extra_commands): ...
def check(spec, verbosity: int = ...) -> None: ...
SECTION = ORANGE_BOLD
CHECK: Incomplete
HELP_MSG: Incomplete

def spec_data(spec): ...
def format_codepoints(frame): ...
def render_data(spec, show_codepoints): ...
def animate(spec) -> None: ...
