import typing

from _typeshed import Incomplete

from . import win32 as win32


class WinColor:
    BLACK: int
    BLUE: int
    GREEN: int
    CYAN: int
    RED: int
    MAGENTA: int
    YELLOW: int
    GREY: int


class WinStyle:
    NORMAL: int
    BRIGHT: int
    BRIGHT_BACKGROUND: int


class WinTerm:
    def __init__(self) -> None: ...
    def get_attrs(self) -> typing.Any: ...
    def set_attrs(self, value: typing.Any) -> None: ...
    def reset_all(self, on_stderr: Incomplete | None = ...) -> None: ...
    def fore(self, fore: Incomplete | None = ..., light: bool = ..., on_stderr: bool = ...) -> None: ...
    def back(self, back: Incomplete | None = ..., light: bool = ..., on_stderr: bool = ...) -> None: ...
    def style(self, style: Incomplete | None = ..., on_stderr: bool = ...) -> None: ...
    def set_console(self, attrs: Incomplete | None = ..., on_stderr: bool = ...) -> None: ...
    def get_position(self, handle: typing.Any) -> typing.Any: ...
    def set_cursor_position(self, position: Incomplete | None = ..., on_stderr: bool = ...) -> None: ...
    def cursor_adjust(self, x: typing.Any, y: typing.Any, on_stderr: bool = ...) -> None: ...
    def erase_screen(self, mode: int = ..., on_stderr: bool = ...) -> None: ...
    def erase_line(self, mode: int = ..., on_stderr: bool = ...) -> None: ...
    def set_title(self, title: typing.Any) -> None: ...


def enable_vt_processing(fd: typing.Any) -> typing.Any: ...
